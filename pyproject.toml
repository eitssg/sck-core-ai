[project]
name = "sck-core-ai"
version = "1.3.0"
description = "AI agent for YAML/CloudFormation linting and code completion using Langflow"
readme = "README.md"
authors = [{ name = "James Barwick", email = "jbarwick@eits.com.sg" }]
requires-python = ">=3.11,<3.13.0"
dependencies = [
    # HTTP client and utilities
    "httpx>=0.25.0",
    "pydantic>=2.5.0",
    # YAML and CloudFormation processing
    "pyyaml>=6.0.1",
    "jinja2>=3.1.2",
    "cfn-lint>=0.83.0",
    # Logging (additional to core_logging from sck-core-framework)
    "structlog>=23.2.0",
    # MCP server support
    "mcp[cli]>=0.9.0",
    # Document processing and indexing
    "sentence-transformers>=2.2.2",
    "beautifulsoup4>=4.12.0",
    "markdownify>=0.11.6",
    "tiktoken>=0.5.0",
    # Machine learning (lightweight alternatives to ChromaDB)
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    # Vector DB (align with Langflow 1.1.x which pins chromadb==0.5.23)
    "chromadb>=1.0.0",
    # Environment configuration
    "python-dotenv>=1.0.0",
    # SCK Core Framework (install manually with pip first)
    "sck-core-framework",
    "sck-core-execute",
    "sck-core-component",
    "sck-core-db",
    "sck-core-runner",
    "sck-core-deployspec",
    "sck-core-organization",
    "sck-core-invoker",
    "sck-core-report",
    "sck-core-codecommit",
    "sck-core-api",
    "sck-core-cli",
    "sck-core-docs",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["core_ai"]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "mypy>=1.7.0",
    "isort>=5.12.0",

    # Local development
    "python-dotenv>=1.0.0",
    "pre-commit>=3.6.0",

    # Documentation
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "black>=25.9.0",
    "flake8>=7.3.0",
]

# AI/ML dependencies (optional, install with: uv pip install --extra ai)
# Note: These may have build issues on Python 3.13, use Python 3.11/3.12 if needed
ai = [
    # Langflow orchestrates UI + flow execution.
    "langflow>=1.6.4",
    # LangChain stack: allow both late 0.2.x (needed by Langflow 1.5.x) and 0.3.x when supported
    # Using >=0.2.30 as compromise floor (post tool consolidation) while retaining <0.4.0 ceiling
    "langchain-core>=0.2.30",
    "langchain-community>=0.2.30",
    "langchain>=0.2.30",
    # Langflow 1.5.x via langchain-pinecone>=0.2.8 requires langchain-openai>=0.3.11
    "langchain-openai>=0.3.11",
    # AWS integration layer (Bedrock, etc.) â€“ pin alongside 0.2.x LangChain
    # Upgrade to 0.2.x line to align with langchain-core 0.3.x (pre-0.2 requires core <0.3)
    "langchain-aws>=0.2.0",
    # Model provider SDKs
    "openai>=1.37.0",
    "anthropic>=0.29.0",
]

[project.scripts]
sck-ai-mcp = "core_ai.mcp_server:main"

[tool.black]
line-length = 132
target-version = ['py311']
include = '\\.pyi?$'
skip-string-normalization = true
extend-exclude = ''' /(.venv|build|dist|htmlcov)/ '''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 132

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
# Rely on .coveragerc for coverage configuration; keep output concise.
addopts = "-q"

[tool.uv.sources]
sck-core-codecommit = { path = "../sck-core-codecommit", editable = true }
sck-core-framework = { path = "../sck-core-framework", editable = true }
sck-core-db = { path = "../sck-core-db", editable = true }
sck-core-execute = { path = "../sck-core-execute", editable = true }
sck-core-report = { path = "../sck-core-report", editable = true }
sck-core-runner = { path = "../sck-core-runner", editable = true }
sck-core-component = { path = "../sck-core-component", editable = true }
sck-core-deployspec = { path = "../sck-core-deployspec", editable = true }
sck-core-invoker = { path = "../sck-core-invoker", editable = true }
sck-core-organization = { path = "../sck-core-organization", editable = true }
sck-core-api = { path = "../sck-core-api", editable = true }
sck-core-cli = { path = "../sck-core-cli", editable = true }
sck-core-docs = { path = "../sck-core-docs", editable = true }
